// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MojGrad.Services;

namespace MojGrad.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("MojGrad.Models.DodeljenaMedalja", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<long>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MedaljaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("MedaljaId");

                    b.ToTable("DodeljeneMedalje");
                });

            modelBuilder.Entity("MojGrad.Models.Dogadjaj", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<long>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naslov")
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slika")
                        .HasColumnType("TEXT");

                    b.Property<double>("X")
                        .HasColumnType("REAL");

                    b.Property<double>("Y")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Dogadjaji");
                });

            modelBuilder.Entity("MojGrad.Models.Izazov", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<long>("KategorijaId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naslov")
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT");

                    b.Property<float>("X")
                        .HasColumnType("REAL");

                    b.Property<float>("Y")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Izazovi");
                });

            modelBuilder.Entity("MojGrad.Models.Kategorija", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naziv")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("MojGrad.Models.Komentar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<long>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ocena")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PostId");

                    b.ToTable("Komentari");
                });

            modelBuilder.Entity("MojGrad.Models.KomentarDogadjaja", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<long>("DogadjajId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ocena")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DogadjajId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("KomentariDogadjaja");
                });

            modelBuilder.Entity("MojGrad.Models.Korisnik", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Ban")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FcmToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ime")
                        .HasColumnType("TEXT");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lozinka")
                        .HasColumnType("TEXT");

                    b.Property<int>("Poeni")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prezime")
                        .HasColumnType("TEXT");

                    b.Property<double>("Radius")
                        .HasColumnType("REAL");

                    b.Property<int>("Rola")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Slika")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("MojGrad.Models.Medalja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naziv")
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slika")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Medalje");
                });

            modelBuilder.Entity("MojGrad.Models.Nadleznost", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("KategorijaId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Nadleznost");
                });

            modelBuilder.Entity("MojGrad.Models.Prijava", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<long>("IzazovId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IzazovId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Prijave");
                });

            modelBuilder.Entity("MojGrad.Models.PrijavaDogadjaja", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<long>("DogadjajId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DogadjajId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("PrijaveDogadjaja");
                });

            modelBuilder.Entity("MojGrad.Models.Resenje", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<long>("IzazovId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ocena")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IzazovId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Resenja");
                });

            modelBuilder.Entity("MojGrad.Models.SlikaIzazova", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("IzazovId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naziv")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IzazovId");

                    b.ToTable("SlikeIzazova");
                });

            modelBuilder.Entity("MojGrad.Models.SlikaResenja", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naziv")
                        .HasColumnType("TEXT");

                    b.Property<long>("ResenjeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResenjeId");

                    b.ToTable("SlikeResenja");
                });

            modelBuilder.Entity("MojGrad.Models.Ucesnik", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("DogadjajId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DogadjajId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Ucesnici");
                });

            modelBuilder.Entity("MojGrad.Models.DodeljenaMedalja", b =>
                {
                    b.HasOne("MojGrad.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MojGrad.Models.Medalja", "Medalja")
                        .WithMany()
                        .HasForeignKey("MedaljaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MojGrad.Models.Dogadjaj", b =>
                {
                    b.HasOne("MojGrad.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MojGrad.Models.Izazov", b =>
                {
                    b.HasOne("MojGrad.Models.Kategorija", "Kategorija")
                        .WithMany()
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MojGrad.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MojGrad.Models.Komentar", b =>
                {
                    b.HasOne("MojGrad.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MojGrad.Models.Izazov", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MojGrad.Models.KomentarDogadjaja", b =>
                {
                    b.HasOne("MojGrad.Models.Dogadjaj", "Dogadjaj")
                        .WithMany()
                        .HasForeignKey("DogadjajId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MojGrad.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MojGrad.Models.Nadleznost", b =>
                {
                    b.HasOne("MojGrad.Models.Kategorija", "Kategorija")
                        .WithMany()
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MojGrad.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MojGrad.Models.Prijava", b =>
                {
                    b.HasOne("MojGrad.Models.Izazov", "Izazov")
                        .WithMany()
                        .HasForeignKey("IzazovId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MojGrad.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MojGrad.Models.PrijavaDogadjaja", b =>
                {
                    b.HasOne("MojGrad.Models.Dogadjaj", "Dogadjaj")
                        .WithMany()
                        .HasForeignKey("DogadjajId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MojGrad.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MojGrad.Models.Resenje", b =>
                {
                    b.HasOne("MojGrad.Models.Izazov", "Izazov")
                        .WithMany()
                        .HasForeignKey("IzazovId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MojGrad.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MojGrad.Models.SlikaIzazova", b =>
                {
                    b.HasOne("MojGrad.Models.Izazov", "Izazov")
                        .WithMany()
                        .HasForeignKey("IzazovId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MojGrad.Models.SlikaResenja", b =>
                {
                    b.HasOne("MojGrad.Models.Resenje", "Resenje")
                        .WithMany()
                        .HasForeignKey("ResenjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MojGrad.Models.Ucesnik", b =>
                {
                    b.HasOne("MojGrad.Models.Dogadjaj", "Dogadjaj")
                        .WithMany()
                        .HasForeignKey("DogadjajId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MojGrad.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
